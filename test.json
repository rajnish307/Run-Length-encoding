
{
  "StartAt": "GlueJob",
  "States": {
    "GlueJob": {
      "Type": "Task",
      "Resource": "arn:aws:states:::glue:startJobRun.sync",
      "Parameters": {
        "JobName": "MyGlueJob"
      },
      "ResultPath": "$.glueJobOutput",
      "Next": "LambdaFunction"
    },
    "LambdaFunction": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-east-1:123456789012:function:MyLambdaFunction",
      "InputPath": "$.glueJobOutput.JobRunId",
      "End": true
    }
  }
}




import sys
from awsglue.transforms import *
from awsglue.utils import getResolvedOptions
from pyspark.context import SparkContext
from awsglue.context import GlueContext
from awsglue.job import Job
import logging

def glue_job(args):
    sc = SparkContext()
    glueContext = GlueContext(sc)
    spark = glueContext.spark_session
    job = Job(glueContext)
    job.init(args['JOB_NAME'], args)

    logger = logging.getLogger(__name__)
    execution_id = args['JOB_RUN_ID']
    logger.info(f"Glue job execution ID: {execution_id}")

    # Your PySpark ETL logic here

    job.commit()



import json

def lambda_handler(event, context):
    glue_job_execution_id = event['JobRunId']

    # Do something with the execution ID
    print(f"Glue job execution ID: {glue_job_execution_id}")

    return {
        'statusCode': 200,
        'body': json.dumps('Lambda function executed successfully')
    }



{
  "StartAt": "GlueJob",
  "States": {
    "GlueJob": {
      "Type": "Task",
      "Resource": "arn:aws:states:::glue:startJobRun.sync",
      "Parameters": {
        "JobName": "MyGlueJob"
      },
      "ResultPath": "$.glueJobOutput",
      "Next": "LambdaFunction",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "ErrorHandlingLambda"
        }
      ]
    },
    "LambdaFunction": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-east-1:123456789012:function:MyLambdaFunction",
      "InputPath": "$.glueJobOutput.JobRunId",
      "End": true
    },
    "ErrorHandlingLambda": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-east-1:123456789012:function:ErrorHandlingLambda",
      "End": true
    }
  }
}

